{"version":3,"sources":["componets/Profile/Profile.module.css","componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/MyPosts/MyPosts.module.css","componets/Profile/MyPosts/Posts/Post.module.css","componets/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","componets/Profile/MyPosts/Posts/Post.jsx","componets/Profile/MyPosts/PostForm/PostForm.jsx","componets/Profile/MyPosts/MyPosts.jsx","componets/Profile/MyPosts/MyPostsContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","img2","src","discriptionBlock","photos","large","alt","Preloader","Post","post","item","message","likesCount","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","React","memo","PostsElements","posts","map","p","id","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","this","PureComponent","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,iBAAmB,wC,oBCAvGD,EAAOC,QAAU,CAAC,MAAQ,yB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,8JC6CpCC,EA3CgB,SAACC,GAC5B,MAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASD,EAAMI,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAW,WACPD,EAAWL,EAAMI,UAClB,CAACJ,EAAMI,SAgBV,OACI,iCAEMF,GACF,8BACI,uBAAMK,cAnBO,WACrBJ,GAAY,IAkBJ,UAAwCH,EAAMI,QAAU,YAAxD,SAIHF,GACD,8BACI,uBAAOM,SAhBI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAgBXC,WAAW,EACXC,OAvBQ,WACvBV,GAAY,GACZH,EAAMc,aAAaV,IAsBJO,MAAOP,UCFfW,EA9BK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASZ,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aACnC,OAAIE,EAIA,gCAQI,qBAAKC,UAAWC,IAAEC,KAAlB,SACI,qBAAKC,IAAI,4EAGb,sBAAKH,UAAWC,IAAEG,iBAAlB,UACI,qBAAKD,IAAKJ,EAAQM,OAAOC,MAAOC,IAAI,KACpC,cAAC,EAAD,CAAwBpB,OAAQA,EAAQU,aAAcA,IAF1D,0BAfG,cAACW,EAAA,EAAD,K,oDCiCAC,EAtCF,SAAC1B,GACV,OACI,sBAAKiB,UAAWC,IAAES,KAAlB,UACI,qBAAKP,IAAK,0EAEV,qBAAKH,UAAWC,IAAEU,KAAlB,SACK5B,EAAM6B,UAGX,8BACI,+BAAO7B,EAAM8B,mB,kCCTvBC,EAAcC,YAAiB,IA0BtBC,EANOC,YAAU,CAC5BC,KAAM,iBADYD,EAlBL,SAAClC,GACd,OACI,uBAAMoC,SAAUpC,EAAMqC,aAAtB,UACI,gCACI,cAACC,EAAA,EAAD,CAAOC,YAAa,kBAAmBC,KAAM,iBAAkBC,UAAWC,IAClEC,SAAU,CAACC,IAAUb,KAC3B,0BAEN,gCACI,8CACA,qDCeDc,EA3BCC,IAAMC,MAAK,SAAC/C,GAExB,IAAIgD,EACAhD,EAAMiD,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMtB,QAASsB,EAAEtB,QAASuB,GAAID,EAAEC,GAAItB,WAAYqB,EAAErB,gBAO3E,OAAO,8BACH,sBAAKb,UAAWC,IAAE+B,MAAlB,qBAEI,gCACI,8BACI,cAAC,EAAD,CAAeb,SAVjB,SAACzB,GACXX,EAAMqD,QAAQ1C,EAAM2C,qBAYZ,8BACKN,eCDNO,EAFUC,aAdH,SAACC,GACnB,MAAO,CACHR,MAAOQ,EAAMC,YAAYT,MACzBU,YAAaF,EAAMC,YAAYC,gBAGd,SAACC,GACtB,MAAO,CACHP,QAAS,SAACC,GACNM,EAASC,YAAqBP,QAKjBE,CAA6CX,GCfhEiB,E,4JAMF,WAGI,OACI,sBAAK7C,UAAWC,IAAE6C,QAAlB,UAEI,cAAC,EAAD,CAAa/C,QAASgD,KAAKhE,MAAMgB,QAASZ,OAAQ4D,KAAKhE,MAAMI,OAChDU,aAAckD,KAAKhE,MAAMc,eACtC,cAAC,EAAD,W,GAdMmD,iBAuBPH,I,wBCnBTI,E,uKAIF,WACI,IAAIC,EAASH,KAAKhE,MAAMoE,MAAMC,OAAOF,OAChCA,IACDA,EAASH,KAAKhE,MAAMsE,kBAExBN,KAAKhE,MAAMuE,eAAeJ,GAC1BH,KAAKhE,MAAMwE,UAAUL,K,oBAIzB,WAEI,OACI,8BAEI,cAAC,EAAD,eACQH,KAAKhE,c,GApBE8C,IAAM2B,WA0CtBC,sBACXlB,aAVkB,SAACC,GAAD,MAAY,CAC9BzC,QAASyC,EAAMC,YAAY1C,QAC3BZ,OAAQqD,EAAMC,YAAYtD,OAC1BkE,iBAAkBb,EAAMkB,KAAKvB,GAC7BwB,OAAQnB,EAAMkB,KAAKC,UAMM,CAACL,mBAAgBC,cAAW1D,mBACrD+D,IACAC,IAHWJ,CAIdR","file":"static/js/3.ae87be09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__4SXzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1\":\"ProfileInfo_img1__VdeuS\",\"img2\":\"ProfileInfo_img2__1mo3j\",\"discriptionBlock\":\"ProfileInfo_discriptionBlock__3WYQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1tuEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3e3LX\",\"post\":\"Post_post__1NNoZ\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus (props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---------\"} </span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}></input>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n           {/* <div className={s.img1}>\r\n\r\n                <img src='https://stimg.cardekho.com/images/car-images/930x620/Skoda/Superb/6764/1590559103723/227_Steel-Grey_454642.jpg?tr=w-420'/>\r\n\r\n\r\n            </div>*/}\r\n\r\n            <div className={s.img2}>\r\n                <img src='https://cdn.iconscout.com/icon/free/png-128/skoda-3441045-2874154.png'/>\r\n            </div>\r\n\r\n            <div className={s.discriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}  />\r\n                Ava + discription\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={'https://cdn.iconscout.com/icon/free/png-128/skoda-3441045-2874154.png'}/>\r\n\r\n            <div className={s.item}>\r\n                {props.message}\r\n            </div>\r\n\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*const Post = (props) => {\r\n  return (\r\n\r\n\r\n    <div className={s.item}>\r\n      <img src='https://cdn.iconscout.com/icon/free/png-128/skoda-3441045-2874154.png' />\r\n          {props.message}\r\n        \r\n      <div><span>Like</span> {props.likesCount} </div>\r\n\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\n}*/\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Enter your post\"} name={\"newPostElement\"} component={Textarea}\r\n                        validate={[required, maxLength10]}\r\n                /><br/>\r\n            </div>\r\n            <dvi>\r\n                <button>Add post</button>\r\n                <button>Remove</button>\r\n            </dvi>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ // <----- THIS IS THE IMPORTANT PART!\r\n    form: 'PostReduxForm',                            // a unique name for this form\r\n    //fields: ['login', 'password', 'rememberMe'] // all the fields in your form\r\n})(PostForm);\r\n\r\n\r\nexport default PostReduxForm;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport PostReduxForm from \"./PostForm/PostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let PostsElements =\r\n        props.posts.map(p => <Post message={p.message} id={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let addPost = (value) => {\r\n        props.addPost(value.newPostElement)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div className={s.posts}>\r\n            My posts\r\n            <div>\r\n                <div>\r\n                    <PostReduxForm onSubmit={addPost}/>\r\n                </div>\r\n\r\n                <div>\r\n                    {PostsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n;\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => {\r\n            dispatch(addPostActionCreator(newPostElement));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {PureComponent} from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nclass Profile extends PureComponent {\r\n\r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps !== this.props || nextState !== this.state\r\n    }*/\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className={s.content}>\r\n\r\n                <ProfileInfo profile={this.props.profile} status={this.props.status}\r\n                             updateStatus={this.props.updateStatus}/>\r\n                <MyPostsContainer/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Profile\r\n                    {...this.props}\r\n                    /*profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}*//>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect )\r\n(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}