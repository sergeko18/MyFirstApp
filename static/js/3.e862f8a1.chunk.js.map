{"version":3,"sources":["componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/Profile.module.css","componets/Profile/MyPosts/MyPosts.module.css","componets/Profile/MyPosts/Posts/Post.module.css","componets/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileDataForm.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","componets/Profile/MyPosts/Posts/Post.jsx","componets/Profile/MyPosts/PostForm/PostForm.jsx","componets/Profile/MyPosts/MyPosts.jsx","componets/Profile/MyPosts/MyPostsContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Input","required","maxLength50","type","Textarea","Object","keys","profile","contacts","map","key","className","s","error","style","formSummaryError","Contact","contactTitle","contactValue","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","discriptionBlock","img2","src","photos","large","userImg","alt","target","files","length","initialValues","formData","then","Post","post","item","message","likesCount","maxLength10","maxLengthCreator","PostReduxForm","Field","placeholder","name","component","validate","MyPosts","React","memo","PostsElements","posts","p","id","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","this","PureComponent","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.e862f8a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1\":\"ProfileInfo_img1__VdeuS\",\"img2\":\"ProfileInfo_img2__1mo3j\",\"discriptionBlock\":\"ProfileInfo_discriptionBlock__3WYQM\",\"contact\":\"ProfileInfo_contact__MPQBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__4SXzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1tuEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3e3LX\",\"post\":\"Post_post__1NNoZ\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus (props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---------\"} </span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}></input>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userImg from \"../../../assets/images/user.png\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {maxLength50} from \"../../Login/Login\";\r\nimport {Contact} from \"./ProfileInfo\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <span>Name</span>{createField(\"Name\", \"fullName\", Input, [required, maxLength50])}\r\n            </div>\r\n\r\n            <div>\r\n                Looking for a job:{createField(null, \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                My professional skills:{createField(\"Enter your main skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n            </div>\r\n            <div>\r\n                About me: {createField(\"Tell about yourself\", \"aboutMe\", Textarea, [])}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n                return <div key={key} className={s.contacts}>\r\n                    <span>{key}:</span>\r\n                    {createField(key, \"contacts.\"+key , Input, )}\r\n                </div>\r\n            })}\r\n            </div>\r\n\r\n            {props.error && <div className={style.formSummaryError}>\r\n                <span>\r\n                    {props.error}\r\n                </span>\r\n            </div>}\r\n\r\n            <dvi>\r\n                <button>Save</button>\r\n\r\n            </dvi>\r\n\r\n\r\n        </form>\r\n    )\r\n};\r\nconst ProfileDataReduxForm = reduxForm({form: 'profileData'})(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userImg from \"../../../assets/images/user.png\"\r\nimport {Field} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const goToEditMode = () => {\r\n        return setEditMode(true)\r\n    };\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.discriptionBlock}>\r\n                <div className={s.img2}>\r\n                    {<img src={profile.photos.large || userImg} alt=\"\"/>}\r\n                </div>\r\n\r\n                <div>\r\n                    {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                <div>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={goToEditMode}/>}\r\n                </div>\r\n\r\n                <div>\r\n                    <b>Status:</b> <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {isOwner && <div>\r\n                    <button onClick={goToEditMode}>Edit</button>\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <b>Name: {profile.fullName}</b>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills:</b>{profile.lookingForAJobDescription}\r\n            </div>\r\n            <div>\r\n                <b>About me: </b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={'https://cdn.iconscout.com/icon/free/png-128/skoda-3441045-2874154.png'}/>\r\n\r\n            <div className={s.item}>\r\n                {props.message}\r\n            </div>\r\n\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*const Post = (props) => {\r\n  return (\r\n\r\n\r\n    <div className={s.item}>\r\n      <img src='https://cdn.iconscout.com/icon/free/png-128/skoda-3441045-2874154.png' />\r\n          {props.message}\r\n        \r\n      <div><span>Like</span> {props.likesCount} </div>\r\n\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\n}*/\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Enter your post\"} name={\"newPostElement\"} component={Textarea}\r\n                        validate={[required, maxLength10]}\r\n                /><br/>\r\n            </div>\r\n            <dvi>\r\n                <button>Add post</button>\r\n                <button>Remove</button>\r\n            </dvi>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ // <----- THIS IS THE IMPORTANT PART!\r\n    form: 'PostReduxForm',                            // a unique name for this form\r\n    //fields: ['login', 'password', 'rememberMe'] // all the fields in your form\r\n})(PostForm);\r\n\r\n\r\nexport default PostReduxForm;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport PostReduxForm from \"./PostForm/PostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let PostsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message}  likesCount={p.likesCount}/>);\r\n\r\n    let addPost = (value) => {\r\n        props.addPost(value.newPostElement)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div className={s.posts}>\r\n            My posts\r\n            <div>\r\n                <div>\r\n                    <PostReduxForm onSubmit={addPost}/>\r\n                </div>\r\n\r\n                <div>\r\n                    {PostsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n;\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => {\r\n            dispatch(addPostActionCreator(newPostElement));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {PureComponent} from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nclass Profile extends PureComponent {\r\n\r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps !== this.props || nextState !== this.state\r\n    }*/\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className={s.content}>\r\n\r\n                <ProfileInfo profile={this.props.profile}\r\n                             status={this.props.status}\r\n                             updateStatus={this.props.updateStatus}\r\n                             isOwner={this.props.isOwner}\r\n                             savePhoto={this.props.savePhoto}\r\n                             saveProfile={this.props.saveProfile}\r\n                />\r\n                <MyPostsContainer/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect )\r\n(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}